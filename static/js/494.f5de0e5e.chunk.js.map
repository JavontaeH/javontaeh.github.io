{"version":3,"file":"static/js/494.f5de0e5e.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/process.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","warning","invariant","_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","apply","this","instantAnimationState","easeIn","p","easeOut","reverseEasing","easeInOut","mirrorEasing","hueToRgb","q","t","mixLinearColor","from","to","v","fromExpo","Math","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","Boolean","concat","model","parse","_ref","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","_objectSpread","mix","transform","getMixer","origin","mixComplex","mixArray","output","_toConsumableArray","numValues","blendValue","map","fromThis","i","mixObject","key","template","complex","createTransformer","originStats","analyseComplexValue","targetStats","numColors","numNumbers","pipe","values","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","push","interpolate","input","_ref$clamp","clamp","isClamp","inputLength","reverse","interpolator","progressInRange","progress","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","backInOut","easingLookup","linear","circIn","circInOut","circOut","anticipate","pow","easingDefinitionToFunction","definition","_definition","_slicedToArray","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","isEasingArray","state","done","absoluteTimes","offset","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","easing","splice","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","_ref$restSpeed","restSpeed","_ref$restDelta","restDelta","_objectWithoutProperties","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","min","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","current","currentVelocity","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","_ref2","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","update","passTimestamp","start","sync","stop","cancelSync","animate","_a","_b","driverControls","latest","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","_options$duration","_options$elapsed","sampleAnimation","pregeneratedKeyframes","element","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","_defineProperty","fill","iterations","direction","animateStyle","owner","onfinish","set","currentTime","setWithVelocity","cancel","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","default","isAnimatable","startsWith","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","Set","createMotionValueAnimation","transition","valueTransition","getValueTransition","_transition$elapsed","secondsToMilliseconds","isTargetAnimatable","getAnimatableNone","isZero","getZeroUnit","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","prev","boundary","heading","frameData","inertia","isTransitionDefined","valueKey","getDefaultTransition","visualElement","has","HTMLElement","getProps","isKeyframesTarget","when","delayChildren","staggerChildren","staggerDirection","parseFloat","indexOf","potentialUnitType","LayoutGroupContext","createContext","PresenceContext","acos","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","index","delete","process","createRenderStep","keepAlive","immediate","startLoop","flushSync","processStep","stepId","processFrame","forEach","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","_React__default$Compo","_inherits","_super","_createSuper","_classCallCheck","_createClass","_this$props","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","layout","transformProps","translateAlias","transformPerspective","sortTransformProps","transformPropOrder","isCSSVariable","getValueAsType","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","numberValueTypes","valueAsType","transformIsDefault","_ref2$enableHardwareA","enableHardwareAcceleration","_ref2$allowTransformN","allowTransformNone","transformString","sort","_step","_iterator","_createForOfIteratorHelper","s","n","err","trim","buildTransform","_transformOrigin$orig","originX","_transformOrigin$orig2","originY","_transformOrigin$orig3","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","calcOrigin","size","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","camelToDash","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","resolveVariantFromProps","transitionEnd","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","useEffect","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","eventHandler","listener","button","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","info","setActive","Hover","isNodeOrChild","child","parentElement","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","margin","_ref2$amount","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","_ref3$fallback","fallback","env","warnOnce","makeRenderlessComponent","hook","gestureAnimations","whileInView","_ref$viewport","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","useUnmountEffect","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","prevLength","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animations","Promise","animateVisualElement","animateList","createTypeState","createState","isInitialRender","buildResolvedTypeValues","resolveVariant","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","needsAnimating","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","resolve","variantChildren","setAnimateFunction","makeAnimator","getState","subscribe","_usePresence","_usePresence2","safeToRemove","then","distance","PanSession","handlers","_this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","getValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","match","exec","_match","parseCSSVariable","_parseCSSVariable2","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","filter","positionalValues","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","_this$scrapeMotionVal","willChange","initialMotionValues","isWillChangeMotionValue","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","remove","clear","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","_featureDefinitions$n","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","addValue","existingValue","hasAnimated","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","numVariantProps","closestVariantNode","removeValueFromRenderState","defaultValue","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","SubscriptionManager","_a2","_len","args","_key","DOMVisualElement","_VisualElement","compareDocumentPosition","isMounted","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","getDefaultValueType","computedStyle","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","replace","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","str","defaultValueType","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","appearStoreId","optimizedAppearDataAttribute","variant","animateVariant","resolvedDefinition","animateTarget","_ref$transition","transitionOverride","getAnimation","getChildAnimations","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_ref4$delay","_visualElement$makeTa","makeTargetAnimatable","_visualElement$makeTa2","animationTypeState","shouldBlock","shouldBlockAnimation","appearId","MotionAppearAnimations","handoffOptimizedAppearAnimation","setTarget","sortNodePosition","getCurrent","currentValues","isNumericalString","isZeroValueString","valueTypes","findValueType","setMotionValue","_ref$transitionEnd","resolveFinalValueInKeyframes","setVariants","variantLabels","getVariant","setValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","arr","item","timeout","checkElapsed","read","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","init","useLayoutEffect","frameDuration","warned","condition","message","console","warn","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","eventManagers","passiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","substring","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","floatRegex","_v$match2","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","unit","functionRegex","functions","colorToken","numberToken","colors","colorRegex","numbers","tokenised","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}